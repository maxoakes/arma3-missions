#include "cfgRespawnInventory.hpp"
#include "cfgFunctions.hpp"

author = "Scouter";
onLoadName = "Manhunt: Chernarus";
onLoadMission = "Find and kill the specified target, confirm the kill, and leave the area.";
onLoadIntro = "Your team's mission is to find and kill the specified target, confirm the kill, and leave the area. The exact whereabouts of the target are not known, so it will take some searching to find them.";

aiKills = 1;
enableDebugConsole = 1;
joinUnassigned = 1;
saving = 0;
allowFunctionsLog = 1;

respawn = BASE;
respawnTemplates[] = {"MenuPosition", "MenuInventory"};
respawnDelay = 5;
respawnOnStart = 1;

reviveMode = 1;
reviveUnconsciousStateMode = 1;
reviveRequiredTrait = 0;
reviveRequiredItems = 2;
reviveRequiredItemsFakConsumed = 1;
reviveDelay = 10;

corpseManagerMode = 0;
wreckManagerMode = 0;

taskManagement_markers3D = 1;

class Header
{
	gameType = Coop;
	minPlayers = 1;
	maxPlayers = 12;
};

class Params
{
	//time and weather
	class Time
	{
		title = "Environment: Start time of mission";
		values[] = {0, 3, 6, 9, 12, 15, 18, 21};
		texts[] = {"00:00", "03:00", "06:00", "09:00", "12:00", "15:00", "18:00", "21:00"};
		default = 15;
	};
	class TimeScale
	{
		title = "Environment: Time Scale";
		values[] = {1, 2, 3, 4, 5, 6, 8, 10, 12, 20, 60};
		texts[] = {"Realtime", "2x", "3x", "4x", "5x", "6x", "8x", "10x", "12x", "20x", "60x"};
		default = 4;
	};
	class OvercastPercent
	{
		title = "Environment: Overcast Amount";
		values[] = {0, 10, 25, 50, 75, 90, 100};
		texts[] = {"0%", "10%", "25%", "50%", "75%", "90%", "100%"};
		default = 50;
	};
	class FogPercent
	{
		title = "Environment: Fog Amount";
		values[] = {0, 10, 25, 50, 75, 90, 100};
		texts[] = {"0%", "10%", "25%", "50%", "75%", "90%", "100%"};
		default = 25;
	};
	class RainPercent
	{
		title = "Environment: Rain Amount";
		values[] = {0, 10, 25, 50, 75, 90, 100};
		texts[] = {"0%", "10%", "25%", "50%", "75%", "90%", "100%"};
		default = 10;
	};
	class StartPosition
	{
		title = "Environment: Location that the helicopter spawns. It is the insertion and extraction point.";
		values[] = {0, 1, 2, 3, 4, 5, 6, 7, 8};
		texts[] = {"Krutoy Cap", "Kamenka, Hill 121", "Above Balota Airstrip", "Rify Coastline", 
			"Novy Lug Farmhouse", "Pustoshka Farms", "Near Northwest Airfield", "Vysota", "Old Fields"};
		default = 0;
	};
	class ClutterWreck
	{
		title = "Environment: Does the map contain road wreck clutter? Caution: May impact vehicle patrol path-finding!";
		values[] = {1, 0};
		texts[] = {"Yes", "No"};
		default = 0;
	};
	class ClutterGraves
	{
		title = "Environment: Does the map contain mass grave clutter?";
		values[] = {1, 0};
		texts[] = {"Yes", "No"};
		default = 1;
	};
	class PlayerStamina
	{
		title = "Game Setting: Enable Player Stamina";
		values[] = {1, 0};
		texts[] = {"Yes", "No"};
		default = 0;
	};
	class MaxEnemySkill
	{
		title = "Game Setting: Maximum Enemy Skill";
		values[] = {2, 3, 4, 5, 6, 7, 8, 9, 10};
		texts[] = {"Pretty Bad", "Bad", "Okay", "Average", "Good", "Really Good", "Too Good", "Near-Godly", "Literally Jason Bourne"};
		default = 5;
	};
	class DynamicRespawnUpdateInterval
	{
		title = "Game Setting: How long before the dynamic respawn updates to the centroid of player positions?";
		values[] = {0, 10, 30, 60, 120, 180, 240, 300, 360, 420, 480, 540, 600, 900, 1200, 1800};
		texts[] ={"Disabled", "10 sec", "30 sec", "1 min", "2 min", "3 min", "4 min", "5 min", "6 min", "7 min", 
			"8 min", "9 min", "10 min", "15 min", "20 min", "30 min"};
		default = 300;
	};
	class NearbyFootPatrol
	{
		title = "Ground Patrols: Number of concurrent targeted foot patrols to players";
		values[] = {0, 1, 2, 3, 4};
		texts[] = {"None", "1 patrol", "2 patrols", "3 patrols", "4 patrols"};
		default = 1;
	};
	class TargetedFootPatrolInterval
	{
		title = "Ground Patrols: How long before the targeted foot patrol squad respawns?";
		values[] = {0, 1, 10, 30, 60, 120, 180, 240, 300, 360, 420, 480, 540, 600, 900, 1200, 1800};
		texts[] ={"Disabled", "1 sec", "10 sec", "30 sec", "1 min", "2 min", "3 min", "4 min", "5 min", "6 min", "7 min", 
			"8 min", "9 min", "10 min", "15 min", "20 min", "30 min"};
		default = 10;
	};
	class AreaFootPatrolDensity
	{
		title = "Ground Patrols: Patrol Spawn nodes in squares of NxN size";
		values[] = {0, 500, 800, 1000, 1200, 1500, 1800, 2000, 2200, 2500, 3000, 4000, 5000};
		texts[] = {"None", "500m", "800m", "1km", "1.2km", "1.5km", "1.8km", "2km", "2.2km", "2.5km", "3km", "4km", "5km"};
		default = 1500;
	};
	class POIFootPatrolMultiplier
	{
		title = "Ground Patrols: For every 0.2 sq km in POI size, how many patrols will there be? P = min( ceil([area in sq km] * this), 12)";
		values[] = {0, 1, 2, 3, 4, 5, 6};
		texts[] = {"None", "1 patrol", "2 patrols", "3 patrols", "4 patrols", "5 patrols", "6 patrols"};
		default = 1;
	};
	class NearbyVehiclePatrol
	{
		title = "Vehicle Patrols: Number of concurrent targeted vehicle patrols to players";
		values[] = {0, 1, 2, 3, 4};
		texts[] = {"None", "1 vehicle", "2 vehicles", "3 vehicles", "4 vehicles"};
		default = 1;
	};
	class AreaVehiclePatrolDensity
	{
		title = "Vehicle Patrols: For each town/POI, how many vehicles are patrolling the mission area? Limited to 40 vehicle patrols for performance.";
		values[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
		texts[] = {"None", "1x", "2x", "3x", "4x", "5x", "6x", "7x", "8x", "9x", "10x"};
		default = 1;
	};
	class NumberAirPatrols
	{
		title = "Vehicle Patrols: Number of initial helicopter patrols in mission area";
		values[] = {0, 1, 2, 3, 4, 5, 6, 7, 8};
		texts[] = {"None", "1 helicopter", "2 helicopters", "3 helicopters", "4 helicopters", "5 helicopters", 
			"6 helicopters", "7 helicopters", "8 helicopters"};
		default = 2;
	};
	class MinDistanceSpawnHQ
	{
		title = "Playtime: Minimum distance between the spawn and the HQ tent";
		values[] = {50, 100, 250, 500, 1000, 1500, 2000, 2500, 3000, 4000, 5000, 6000};
		texts[] = {"50m", "100m", "250m", "500m", "1.0km", "1.5km", "2.0km", "2.5km", "3.0km", "4.0km", "5.0km", "6.0km"};
		default = 500;
	};
	class MinDistanceSpawnMeeting
	{
		title = "Playtime: Minimum distance between the spawn and the meeting";
		values[] = {50, 100, 250, 500, 1000, 1500, 2000, 2500, 3000, 4000, 5000, 6000};
		texts[] = {"50m", "100m", "250m", "500m", "1.0km", "1.5km", "2.0km", "2.5km", "3.0km", "4.0km", "5.0km", "6.0km"};
		default = 2000;
	};
	class MinDistanceHQMeeting
	{
		title = "Playtime: Minimum distance between HQ tent and meeting";
		values[] = {50, 100, 250, 500, 1000, 1500, 2000, 2500, 3000, 4000, 5000, 6000};
		texts[] = {"50m", "100m", "250m", "500m", "1.0km", "1.5km", "2.0km", "2.5km", "3.0km", "4.0km", "5.0km", "6.0km"};
		default = 1500;
	};
	class PickNNearestObjectives
	{
		title = "Playtime: Pick Randomly from N Nearest Objectives from Previous Objective";
		values[] = {1, 2, 3, 4, 5, 6, 8, 10, 12, 15, 20, 25, 30, 40, 50, 60, 75, 100, 100000};
		texts[] ={"1 spot", "2 spots", "3 spots", "4 spots", "5 spots", "6 spots", "8 spots", "10 spots", 
			"12 spots", "15 spots", "20 spots", "25 spots", "30 spots", "40 spots", "50 spots", "60 spots", 
			"75 spots", "100 spots", "All spots"};
		default = 10;
	};
	class Debug
	{
		title = "Debug Mode";
		values[] = {1, 0};
		texts[] = {"On", "Off"};
		default = 0;
	};
};